#include <bits/stdc++.h>
using namespace std;
 
// Function to calculate
// the max sum of subsequence
int maxSubseq(int arr[], int N, int K)
{
    // Variable to store the max sum
    int sum = 0;
 
    // Sort the array
    sort(arr, arr + N);
 
    // Iterate over the array
    for (int i = 0; i < N; i++) {
        if (K == 0)
            break;
 
        if (arr[i] < 0) {
 
            // Flip sign
            arr[i] = -arr[i];
 
            // Decrement k
            K--;
        }
    }
 
    // Traverse over the array
    for (int i = 0; i < N; i++)
 
        // Add only positive elements
        if (arr[i] > 0)
            sum += arr[i];
 
    // Return the max sum
    return sum;
}
 
// Driver Code
int main()
{
 
    // Given array
    int arr[] = { 6, -10, -1, 0, -4, 2 };
 
    // Variable to store number
    // of flips are allowed
    int K = 2;
    int N = sizeof(arr)
            / sizeof(arr[0]);
 
    // Function call to find
    // the maximum sum of subsequence
    cout << maxSubseq(arr, N, K);
    return 0;
}
